libcore.reflect.Types.getTypeArray->libcore.reflect.ListOfTypes.getResolvedTypes->libcore.reflect.ListOfTypes.resolveTypes->libcore.reflect.ParameterizedTypeImpl.getResolvedType->libcore.reflect.ParameterizedTypeImpl.getRawType->java.lang.Class.forName-><<java.lang.String>><<android.content.Context>><<boolean>><<false>><<java.lang.ClassLoader>><<java.lang.BootClassLoader@8fb05e4>>->class android.content.Context
java.lang.Class.forName-><<java.lang.String>><<java.lang.Class>><<boolean>><<false>><<java.lang.ClassLoader>><<java.lang.BootClassLoader@8fb05e4>>->class java.lang.Class
libcore.reflect.Types.getTypeArray->libcore.reflect.ListOfTypes.getResolvedTypes->libcore.reflect.ListOfTypes.resolveTypes->libcore.reflect.ParameterizedTypeImpl.getResolvedType->libcore.reflect.ParameterizedTypeImpl.getRawType->java.lang.Class.forName-><<java.lang.String>><<java.lang.String>><<boolean>><<false>><<java.lang.ClassLoader>><<java.lang.BootClassLoader@8fb05e4>>->class java.lang.String
libcore.reflect.Types.getTypeArray->libcore.reflect.ListOfTypes.getResolvedTypes->libcore.reflect.ListOfTypes.resolveTypes->libcore.reflect.ParameterizedTypeImpl.getResolvedType->libcore.reflect.ParameterizedTypeImpl.getRawType->java.lang.Class.forName-><<java.lang.String>><<android.net.Uri>><<boolean>><<false>><<java.lang.ClassLoader>><<java.lang.BootClassLoader@8fb05e4>>->class android.net.Uri
libcore.reflect.Types.getTypeArray->libcore.reflect.ListOfTypes.getResolvedTypes->libcore.reflect.ListOfTypes.resolveTypes->libcore.reflect.ParameterizedTypeImpl.getResolvedType->libcore.reflect.ParameterizedTypeImpl.getRawType->java.lang.Class.forName-><<java.lang.String>><<android.content.Context>><<boolean>><<false>><<java.lang.ClassLoader>><<java.lang.BootClassLoader@8fb05e4>>->class android.content.Context
java.lang.Class.forName-><<java.lang.String>><<java.lang.Class>><<boolean>><<false>><<java.lang.ClassLoader>><<java.lang.BootClassLoader@8fb05e4>>->class java.lang.Class
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.ActivityThread.createBaseContextForActivity->android.app.ContextImpl.createActivityContext->android.app.ContextImpl.<init>->java.util.Objects.equals->java.io.File.equals->java.io.File.compareTo->java.io.UnixFileSystem.compare->java.io.File.getPath->->/data/user/0/com.zharski.FireSnake
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.ActivityThread.createBaseContextForActivity->android.app.ContextImpl.createActivityContext->android.app.ContextImpl.<init>->java.util.Objects.equals->java.io.File.equals->java.io.File.compareTo->java.io.UnixFileSystem.compare->java.io.File.getPath->->/data/user/0/com.zharski.FireSnake
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.app.Activity.onCreate-><<android.os.Bundle>><<null>>->undefined
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.content.Intent.$init-><<java.lang.String>><<android.service.wallpaper.CHANGE_LIVE_WALLPAPER>>->undefined
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.content.Intent.putExtra-><<java.lang.String>><<android.service.wallpaper.extra.LIVE_WALLPAPER_COMPONENT>><<android.os.Parcelable>><<[object Object]>>->Intent { act=android.service.wallpaper.CHANGE_LIVE_WALLPAPER (has extras) }
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.app.Activity.startActivity->android.app.Activity.startActivity->android.app.Activity.startActivityForResult->android.app.Activity.startActivityForResult->android.app.Activity.startActivityForResult-><<android.content.Intent>><<Intent { act=android.service.wallpaper.CHANGE_LIVE_WALLPAPER (has extras) }>><<int>><<-1>><<android.os.Bundle>><<null>>->undefined
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.app.Activity.startActivity->android.app.Activity.startActivity->android.app.Activity.startActivityForResult-><<android.content.Intent>><<Intent { act=android.service.wallpaper.CHANGE_LIVE_WALLPAPER (has extras) }>><<int>><<-1>>->undefined
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.ActivityThread.createBaseContextForActivity->android.app.ContextImpl.createActivityContext->android.app.ContextImpl.<init>->java.util.Objects.equals->java.io.File.equals->java.io.File.compareTo->java.io.UnixFileSystem.compare->java.io.File.getPath->->/data/user/0/com.zharski.FireSnake
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.ActivityThread.createBaseContextForActivity->android.app.ContextImpl.createActivityContext->android.app.ContextImpl.<init>->java.util.Objects.equals->java.io.File.equals->java.io.File.compareTo->java.io.UnixFileSystem.compare->java.io.File.getPath->->/data/user/0/com.zharski.FireSnake
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.app.Activity.onCreate-><<android.os.Bundle>><<null>>->undefined
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.content.Intent.$init-><<java.lang.String>><<android.service.wallpaper.CHANGE_LIVE_WALLPAPER>>->undefined
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.content.Intent.putExtra-><<java.lang.String>><<android.service.wallpaper.extra.LIVE_WALLPAPER_COMPONENT>><<android.os.Parcelable>><<[object Object]>>->Intent { act=android.service.wallpaper.CHANGE_LIVE_WALLPAPER (has extras) }
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.app.Activity.startActivity->android.app.Activity.startActivity->android.app.Activity.startActivityForResult->android.app.Activity.startActivityForResult->android.app.Activity.startActivityForResult-><<android.content.Intent>><<Intent { act=android.service.wallpaper.CHANGE_LIVE_WALLPAPER (has extras) }>><<int>><<-1>><<android.os.Bundle>><<null>>->undefined
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.app.Activity.startActivity->android.app.Activity.startActivity->android.app.Activity.startActivityForResult-><<android.content.Intent>><<Intent { act=android.service.wallpaper.CHANGE_LIVE_WALLPAPER (has extras) }>><<int>><<-1>>->undefined
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.ActivityThread.createBaseContextForActivity->android.app.ContextImpl.createActivityContext->android.app.ContextImpl.<init>->java.util.Objects.equals->java.io.File.equals->java.io.File.compareTo->java.io.UnixFileSystem.compare->java.io.File.getPath->->/data/user/0/com.zharski.FireSnake
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.ActivityThread.createBaseContextForActivity->android.app.ContextImpl.createActivityContext->android.app.ContextImpl.<init>->java.util.Objects.equals->java.io.File.equals->java.io.File.compareTo->java.io.UnixFileSystem.compare->java.io.File.getPath->->/data/user/0/com.zharski.FireSnake
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.app.Activity.onCreate-><<android.os.Bundle>><<null>>->undefined
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.content.Intent.$init-><<java.lang.String>><<android.service.wallpaper.CHANGE_LIVE_WALLPAPER>>->undefined
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.content.Intent.putExtra-><<java.lang.String>><<android.service.wallpaper.extra.LIVE_WALLPAPER_COMPONENT>><<android.os.Parcelable>><<[object Object]>>->Intent { act=android.service.wallpaper.CHANGE_LIVE_WALLPAPER (has extras) }
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.app.Activity.startActivity->android.app.Activity.startActivity->android.app.Activity.startActivityForResult->android.app.Activity.startActivityForResult->android.app.Activity.startActivityForResult-><<android.content.Intent>><<Intent { act=android.service.wallpaper.CHANGE_LIVE_WALLPAPER (has extras) }>><<int>><<-1>><<android.os.Bundle>><<null>>->undefined
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.app.Activity.startActivity->android.app.Activity.startActivity->android.app.Activity.startActivityForResult-><<android.content.Intent>><<Intent { act=android.service.wallpaper.CHANGE_LIVE_WALLPAPER (has extras) }>><<int>><<-1>>->undefined
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.ActivityThread.createBaseContextForActivity->android.app.ContextImpl.createActivityContext->android.app.ContextImpl.<init>->java.util.Objects.equals->java.io.File.equals->java.io.File.compareTo->java.io.UnixFileSystem.compare->java.io.File.getPath->->/data/user/0/com.zharski.FireSnake
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.ActivityThread.createBaseContextForActivity->android.app.ContextImpl.createActivityContext->android.app.ContextImpl.<init>->java.util.Objects.equals->java.io.File.equals->java.io.File.compareTo->java.io.UnixFileSystem.compare->java.io.File.getPath->->/data/user/0/com.zharski.FireSnake
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.app.Activity.onCreate-><<android.os.Bundle>><<null>>->undefined
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.content.Intent.$init-><<java.lang.String>><<android.service.wallpaper.CHANGE_LIVE_WALLPAPER>>->undefined
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.content.Intent.putExtra-><<java.lang.String>><<android.service.wallpaper.extra.LIVE_WALLPAPER_COMPONENT>><<android.os.Parcelable>><<[object Object]>>->Intent { act=android.service.wallpaper.CHANGE_LIVE_WALLPAPER (has extras) }
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.app.Activity.startActivity->android.app.Activity.startActivity->android.app.Activity.startActivityForResult->android.app.Activity.startActivityForResult->android.app.Activity.startActivityForResult-><<android.content.Intent>><<Intent { act=android.service.wallpaper.CHANGE_LIVE_WALLPAPER (has extras) }>><<int>><<-1>><<android.os.Bundle>><<null>>->undefined
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.app.Activity.startActivity->android.app.Activity.startActivity->android.app.Activity.startActivityForResult-><<android.content.Intent>><<Intent { act=android.service.wallpaper.CHANGE_LIVE_WALLPAPER (has extras) }>><<int>><<-1>>->undefined
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.ActivityThread.createBaseContextForActivity->android.app.ContextImpl.createActivityContext->android.app.ContextImpl.<init>->java.util.Objects.equals->java.io.File.equals->java.io.File.compareTo->java.io.UnixFileSystem.compare->java.io.File.getPath->->/data/user/0/com.zharski.FireSnake
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.ActivityThread.createBaseContextForActivity->android.app.ContextImpl.createActivityContext->android.app.ContextImpl.<init>->java.util.Objects.equals->java.io.File.equals->java.io.File.compareTo->java.io.UnixFileSystem.compare->java.io.File.getPath->->/data/user/0/com.zharski.FireSnake
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.app.Activity.onCreate-><<android.os.Bundle>><<null>>->undefined
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.content.Intent.$init-><<java.lang.String>><<android.service.wallpaper.CHANGE_LIVE_WALLPAPER>>->undefined
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.content.Intent.putExtra-><<java.lang.String>><<android.service.wallpaper.extra.LIVE_WALLPAPER_COMPONENT>><<android.os.Parcelable>><<[object Object]>>->Intent { act=android.service.wallpaper.CHANGE_LIVE_WALLPAPER (has extras) }
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.app.Activity.startActivity->android.app.Activity.startActivity->android.app.Activity.startActivityForResult->android.app.Activity.startActivityForResult->android.app.Activity.startActivityForResult-><<android.content.Intent>><<Intent { act=android.service.wallpaper.CHANGE_LIVE_WALLPAPER (has extras) }>><<int>><<-1>><<android.os.Bundle>><<null>>->undefined
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.app.Activity.startActivity->android.app.Activity.startActivity->android.app.Activity.startActivityForResult-><<android.content.Intent>><<Intent { act=android.service.wallpaper.CHANGE_LIVE_WALLPAPER (has extras) }>><<int>><<-1>>->undefined
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.ActivityThread.createBaseContextForActivity->android.app.ContextImpl.createActivityContext->android.app.ContextImpl.<init>->java.util.Objects.equals->java.io.File.equals->java.io.File.compareTo->java.io.UnixFileSystem.compare->java.io.File.getPath->->/data/user/0/com.zharski.FireSnake
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.ActivityThread.createBaseContextForActivity->android.app.ContextImpl.createActivityContext->android.app.ContextImpl.<init>->java.util.Objects.equals->java.io.File.equals->java.io.File.compareTo->java.io.UnixFileSystem.compare->java.io.File.getPath->->/data/user/0/com.zharski.FireSnake
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.app.Activity.onCreate-><<android.os.Bundle>><<null>>->undefined
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.content.Intent.$init-><<java.lang.String>><<android.service.wallpaper.CHANGE_LIVE_WALLPAPER>>->undefined
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.content.Intent.putExtra-><<java.lang.String>><<android.service.wallpaper.extra.LIVE_WALLPAPER_COMPONENT>><<android.os.Parcelable>><<[object Object]>>->Intent { act=android.service.wallpaper.CHANGE_LIVE_WALLPAPER (has extras) }
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.app.Activity.startActivity->android.app.Activity.startActivity->android.app.Activity.startActivityForResult->android.app.Activity.startActivityForResult->android.app.Activity.startActivityForResult-><<android.content.Intent>><<Intent { act=android.service.wallpaper.CHANGE_LIVE_WALLPAPER (has extras) }>><<int>><<-1>><<android.os.Bundle>><<null>>->undefined
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.zharski.FireSnake.Main.onCreate->android.app.Activity.startActivity->android.app.Activity.startActivity->android.app.Activity.startActivityForResult-><<android.content.Intent>><<Intent { act=android.service.wallpaper.CHANGE_LIVE_WALLPAPER (has extras) }>><<int>><<-1>>->undefined
com.appbrain.a.bm.run->com.appbrain.a.bg.b->android.app.SharedPreferencesImpl.getLong-><<java.lang.String>><<last_check_ping>><<long>><<0>>->0
com.appbrain.a.bm.run->com.appbrain.a.bg.b->android.app.SharedPreferencesImpl.getLong-><<java.lang.String>><<last_err_ping>><<long>><<0>>->0
com.appbrain.a.bm.run->com.appbrain.a.bg.b->android.app.SharedPreferencesImpl.getLong-><<java.lang.String>><<errorcount_ping>><<long>><<0>>->0
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.a.bj.a->com.appbrain.a.ba.get->android.app.SharedPreferencesImpl.getString-><<java.lang.String>><<sdk_off>><<java.lang.String>><<0>>->0
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.a.bj.g->com.appbrain.a.ba.get->android.app.SharedPreferencesImpl.getString-><<java.lang.String>><<pserver>><<java.lang.String>><<http://sdk.appbrain.com,http://sdk-b.apptornado.com>>->http://sdk.appbrain.com,http://sdk-b.apptornado.com
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.a.ba.get->android.app.SharedPreferencesImpl.getString-><<java.lang.String>><<ppath>><<java.lang.String>><</api/pb?action=>>->/api/pb?action=
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->com.appbrain.a.bf.a->com.appbrain.a.be.a->com.appbrain.a.ae.a->cmn.h.a->android.preference.PreferenceManager.getDefaultSharedPreferences->android.content.ContextWrapper.getSharedPreferences->android.content.ContextWrapper.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.app.ContextImpl.getSharedPreferencesPath->android.app.ContextImpl.getPreferencesDir->android.app.ContextImpl.ensurePrivateDirExists->android.app.ContextImpl.ensurePrivateDirExists->java.io.File.exists->->true
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->com.appbrain.a.bf.a->com.appbrain.a.be.a->com.appbrain.a.ae.a->cmn.h.a->android.preference.PreferenceManager.getDefaultSharedPreferences->android.content.ContextWrapper.getSharedPreferences->android.content.ContextWrapper.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.app.ContextImpl.getSharedPreferencesPath->android.app.ContextImpl.makeFilename->java.io.File.<init>->java.io.File.toString->java.io.File.getPath->->/data/user/0/com.zharski.FireSnake/shared_prefs
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->com.appbrain.a.bf.a->com.appbrain.a.be.a->com.appbrain.a.ae.a->cmn.h.a->android.preference.PreferenceManager.getDefaultSharedPreferences->android.content.ContextWrapper.getSharedPreferences->android.content.ContextWrapper.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.app.ContextImpl.getSharedPreferencesPath->android.app.ContextImpl.makeFilename->java.io.File.<init>->java.io.File.toString->java.io.File.getPath->->/data/user/0/com.zharski.FireSnake/shared_prefsjava.io.File.$init-><<java.io.File>><</data/user/0/com.zharski.FireSnake/shared_prefs>><<java.lang.String>><<com.zharski.FireSnake_preferences.xml>>->/data/user/0/com.zharski.FireSnake/shared_prefs
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->com.appbrain.a.bf.a->com.appbrain.a.be.a->com.appbrain.a.ae.a->cmn.h.a->android.preference.PreferenceManager.getDefaultSharedPreferences->android.content.ContextWrapper.getSharedPreferences->android.content.ContextWrapper.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.util.ArrayMap.get->android.util.ArrayMap.indexOfKey->java.io.File.hashCode->java.io.UnixFileSystem.hashCode->java.io.File.getPath->->/data/user/0/com.zharski.FireSnake/shared_prefs/com.zharski.FireSnake_preferences.xml
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->com.appbrain.a.bf.a->com.appbrain.a.be.a->com.appbrain.a.ae.a->cmn.h.a->android.preference.PreferenceManager.getDefaultSharedPreferences->android.content.ContextWrapper.getSharedPreferences->android.content.ContextWrapper.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.util.ArrayMap.get->android.util.ArrayMap.indexOfKey->android.util.ArrayMap.indexOf->java.io.File.equals->java.io.File.compareTo->java.io.UnixFileSystem.compare->java.io.File.getPath->->/data/user/0/com.zharski.FireSnake/shared_prefs/com.zharski.FireSnake_preferences.xml
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->com.appbrain.a.bf.a->com.appbrain.a.be.a->com.appbrain.a.ae.a->cmn.h.a->android.preference.PreferenceManager.getDefaultSharedPreferences->android.content.ContextWrapper.getSharedPreferences->android.content.ContextWrapper.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.util.ArrayMap.get->android.util.ArrayMap.indexOfKey->android.util.ArrayMap.indexOf->java.io.File.equals->java.io.File.compareTo->java.io.UnixFileSystem.compare->java.io.File.getPath->->/data/user/0/com.zharski.FireSnake/shared_prefs/com.zharski.FireSnake_preferences.xml
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->com.appbrain.a.bf.a->com.appbrain.a.be.a->com.appbrain.a.ae.a->cmn.h.a->android.preference.PreferenceManager.getDefaultSharedPreferences->android.content.ContextWrapper.getSharedPreferences-><<java.lang.String>><<com.zharski.FireSnake_preferences>><<int>><<0>>->[object Object]
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->com.appbrain.a.bf.a->com.appbrain.a.be.a->com.appbrain.a.ae.a->cmn.h.a->android.app.SharedPreferencesImpl.getInt-><<java.lang.String>><<installed-since>><<int>><<1558087097>>->1558087097
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->com.appbrain.a.bf.a->com.appbrain.a.be.a->com.appbrain.a.ae.a->cmn.h.a->android.app.SharedPreferencesImpl.getInt-><<java.lang.String>><<scmid>><<int>><<0>>->0
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->com.appbrain.a.bf.a->com.appbrain.a.be.a->com.appbrain.a.ae.a->cmn.h.a->android.app.SharedPreferencesImpl.getLong-><<java.lang.String>><<newscmid>><<long>><<0>>->0
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->com.appbrain.a.bf.a->com.appbrain.a.be.a->com.appbrain.a.ae.a->cmn.h.a->cmn.h.a->java.security.MessageDigest.getInstance->java.security.Security.getImpl->java.security.Security.getSpiClass->java.lang.Class.forName->java.lang.Class.forName-><<java.lang.String>><<java.security.MessageDigestSpi>><<boolean>><<true>><<java.lang.ClassLoader>><<null>>->class java.security.MessageDigestSpi
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.os.Handler.handleCallback->android.app.SharedPreferencesImpl$EditorImpl$3.run->android.app.SharedPreferencesImpl$EditorImpl.-wrap0->android.app.SharedPreferencesImpl$EditorImpl.notifyListeners->com.zharski.FireSnake.LWP.onSharedPreferenceChanged->com.zharski.FireSnake.LWP.LoadSettings->android.app.SharedPreferencesImpl.getInt-><<java.lang.String>><<speed>><<int>><<50>>->50
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.os.Handler.handleCallback->android.app.SharedPreferencesImpl$EditorImpl$3.run->android.app.SharedPreferencesImpl$EditorImpl.-wrap0->android.app.SharedPreferencesImpl$EditorImpl.notifyListeners->com.zharski.FireSnake.LWP.onSharedPreferenceChanged->com.zharski.FireSnake.LWP.LoadSettings->android.app.SharedPreferencesImpl.getInt-><<java.lang.String>><<speed>><<int>><<50>>->50
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.os.Handler.handleCallback->android.app.SharedPreferencesImpl$EditorImpl$3.run->android.app.SharedPreferencesImpl$EditorImpl.-wrap0->android.app.SharedPreferencesImpl$EditorImpl.notifyListeners->com.zharski.FireSnake.LWP.onSharedPreferenceChanged->com.zharski.FireSnake.LWP.LoadSettings->android.app.SharedPreferencesImpl.getInt-><<java.lang.String>><<speed>><<int>><<50>>->50
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->com.appbrain.a.bf.a->com.appbrain.a.be.a->com.appbrain.a.ae.a->cmn.h.a->cmn.ad.a->android.app.SharedPreferencesImpl.getString-><<java.lang.String>><<cmn.refkey>><<java.lang.String>><<null>>->null
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->com.appbrain.a.bf.a->com.appbrain.a.be.a->com.appbrain.a.ae.a->com.appbrain.ReferrerReceiver.retrieve->com.appbrain.a.aw.b->com.appbrain.a.bj.a->com.appbrain.a.ba.get->android.app.SharedPreferencesImpl.getString-><<java.lang.String>><<sdk_off>><<java.lang.String>><<0>>->0
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->com.appbrain.a.bf.a->com.appbrain.a.be.a->com.appbrain.a.ae.a->com.appbrain.ReferrerReceiver.retrieve->com.appbrain.a.aw.b->android.app.SharedPreferencesImpl.getString-><<java.lang.String>><<ref>><<java.lang.String>><<null>>->null
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->com.appbrain.a.bf.a->com.appbrain.a.be.a->com.appbrain.a.ae.a->android.app.SharedPreferencesImpl.getInt-><<java.lang.String>><<pingcount>><<int>><<0>>->0
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->com.appbrain.a.bf.a->com.appbrain.a.be.a->com.appbrain.a.ae.a->android.app.SharedPreferencesImpl.getInt-><<java.lang.String>><<init_called>><<int>><<0>>->1
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->com.appbrain.a.bf.a->com.appbrain.a.be.a->com.appbrain.a.ae.a->com.appbrain.a.bj.k->android.app.SharedPreferencesImpl.getInt-><<java.lang.String>><<ow_imp>><<int>><<0>>->false
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->com.appbrain.a.bf.a->com.appbrain.a.be.a->com.appbrain.a.ae.a->com.appbrain.a.bj.k->android.app.SharedPreferencesImpl.getInt-><<java.lang.String>><<ow_imp>><<int>><<0>>->falseandroid.os.Handler.dispatchMessage->android.app.QueuedWork$QueuedWorkHandler.handleMessage->android.app.QueuedWork.-wrap0->android.app.QueuedWork.processPendingWork->android.app.SharedPreferencesImpl$2.run->android.app.SharedPreferencesImpl.-wrap2->android.app.SharedPreferencesImpl.writeToFile->java.io.File.exists->->0
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->com.appbrain.a.bf.a->com.appbrain.a.be.a->com.appbrain.a.ae.a->android.app.SharedPreferencesImpl.getInt-><<java.lang.String>><<ow_click>><<int>><<0>>->/data/user/0/com.zharski.FireSnake/shared_prefs/com.zharski.FireSnake_preferences.xml
android.os.Handler.dispatchMessage->android.app.QueuedWork$QueuedWorkHandler.handleMessage->android.app.QueuedWork.-wrap0->com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->com.appbrain.a.bf.a->com.appbrain.a.be.a->com.appbrain.a.ae.a->java.io.File.getPath->->0
android.os.Handler.dispatchMessage->android.app.QueuedWork$QueuedWorkHandler.handleMessage->android.app.QueuedWork.-wrap0->com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->com.appbrain.a.bf.a->com.appbrain.a.be.a->com.appbrain.a.ae.a->android.app.SharedPreferencesImpl.getInt-><<java.lang.String>><<ow_inst>><<int>><<0>>->

com.android.internal.os.RuntimeInit.-wrap0->com.android.internal.os.RuntimeInit.Clog_e->android.util.Log.printlns->com.android.internal.util.LineBreakBufferedWriter.<init>->com.android.internal.util.LineBreakBufferedWriter.<init>->java.lang.System.getProperty-><<java.lang.String>><<line.separator>>->null
com.android.internal.os.RuntimeInit.-wrap0->com.android.internal.os.RuntimeInit.Clog_e->android.util.Log.printlns->com.android.internal.util.LineBreakBufferedWriter.<init>->com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->com.appbrain.a.bf.a->com.appbrain.a.be.a->com.appbrain.a.ae.a->com.appbrain.a.ba.get->com.appbrain.a.ba.get->android.app.SharedPreferencesImpl.getString-><<java.lang.String>><<extra>><<java.lang.String>><<null>>->null
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->com.appbrain.a.bf.a->com.appbrain.a.be.a->com.appbrain.a.ae.a->com.appbrain.a.bn.a->android.app.SharedPreferencesImpl.getString-><<java.lang.String>><<pref_tv>><<java.lang.String>><<null>>->BQA
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->com.appbrain.a.bf.a->com.appbrain.a.be.a->com.appbrain.a.ae.a->com.appbrain.a.bn.b->android.app.SharedPreferencesImpl.getString-><<java.lang.String>><<pref_aav>><<java.lang.String>><<null>>->AA
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->cmn.aa.a->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->java.lang.Class.forName->java.lang.Class.forName->java.lang.Class.forName->java.lang.Class.classForName->com.android.org.conscrypt.OpenSSLSocketFactoryImpl.<clinit>->com.android.org.conscrypt.SSLUtils.<clinit>->java.lang.System.getProperty-><<java.lang.String>><<com.android.org.conscrypt.useEngineSocketByDefault>><<java.lang.String>><<false>>->false
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->cmn.aa.a->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->java.lang.Class.forName->java.lang.Class.forName-><<java.lang.String>><<com.android.org.conscrypt.OpenSSLSocketFactoryImpl>><<boolean>><<true>><<java.lang.ClassLoader>><<null>>->class com.android.org.conscrypt.OpenSSLSocketFactoryImpl
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->cmn.aa.a->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->javax.net.ssl.SSLContext.getDefault->javax.net.ssl.SSLContext.getInstance->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.conscrypt.DefaultSSLContextImpl.<init>->com.android.org.conscrypt.OpenSSLContextImpl.<init>->com.android.org.conscrypt.DefaultSSLContextImpl.getKeyManagers->java.lang.System.getProperty-><<java.lang.String>><<javax.net.ssl.keyStore>>->null
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->cmn.aa.a->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->javax.net.ssl.SSLContext.getDefault->javax.net.ssl.SSLContext.getInstance->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.conscrypt.DefaultSSLContextImpl.<init>->com.android.org.conscrypt.OpenSSLContextImpl.<init>->com.android.org.conscrypt.DefaultSSLContextImpl.getTrustManagers->java.lang.System.getProperty-><<java.lang.String>><<javax.net.ssl.trustStore>>->null
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->cmn.aa.a->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->javax.net.ssl.SSLContext.getDefault->javax.net.ssl.SSLContext.getInstance->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.conscrypt.DefaultSSLContextImpl.<init>->com.android.org.conscrypt.OpenSSLContextImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.getDefaultX509KeyManager->com.android.org.conscrypt.SSLParametersImpl.createDefaultX509KeyManager->javax.net.ssl.KeyManagerFactory.init->com.android.org.conscrypt.KeyManagerFactoryImpl.engineInit->java.security.KeyStore.getInstance->java.security.Security.getImpl->java.security.Security.getSpiClass->java.lang.Class.forName->java.lang.Class.forName-><<java.lang.String>><<java.security.KeyStoreSpi>><<boolean>><<true>><<java.lang.ClassLoader>><<null>>->class java.security.KeyStoreSpi
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->cmn.aa.a->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->javax.net.ssl.SSLContext.getDefault->javax.net.ssl.SSLContext.getInstance->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.conscrypt.DefaultSSLContextImpl.<init>->com.android.org.conscrypt.OpenSSLContextImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.getDefaultX509KeyManager->com.android.org.conscrypt.SSLParametersImpl.createDefaultX509KeyManager->javax.net.ssl.KeyManagerFactory.init->com.android.org.conscrypt.KeyManagerFactoryImpl.engineInit->java.security.KeyStore.getInstance->java.security.Security.getImpl->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$Std.<init>->com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi.<init>->java.security.SecureRandom.<init>->java.util.Random.<init>->java.security.SecureRandom.setSeed-><<long>><<0>>->undefined
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->cmn.aa.a->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->javax.net.ssl.SSLContext.getDefault->javax.net.ssl.SSLContext.getInstance->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.conscrypt.DefaultSSLContextImpl.<init>->com.android.org.conscrypt.OpenSSLContextImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.getDefaultX509KeyManager->com.android.org.conscrypt.SSLParametersImpl.createDefaultX509KeyManager->javax.net.ssl.KeyManagerFactory.init->com.android.org.conscrypt.KeyManagerFactoryImpl.engineInit->java.security.KeyStore.getInstance->java.security.Security.getImpl->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$Std.<init>->com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi.<init>->java.security.SecureRandom.<init>->java.security.SecureRandom.getDefaultPRNG->java.security.SecureRandom.getInstance->java.security.SecureRandom.<init>->java.util.Random.<init>->java.security.SecureRandom.setSeed-><<long>><<0>>->undefined
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->cmn.aa.a->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->javax.net.ssl.SSLContext.getDefault->javax.net.ssl.SSLContext.getInstance->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.conscrypt.DefaultSSLContextImpl.<init>->com.android.org.conscrypt.OpenSSLContextImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.getDefaultX509KeyManager->com.android.org.conscrypt.SSLParametersImpl.createDefaultX509KeyManager->javax.net.ssl.KeyManagerFactory.init->com.android.org.conscrypt.KeyManagerFactoryImpl.engineInit->java.lang.System.getProperty-><<java.lang.String>><<javax.net.ssl.keyStore>>->null
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->cmn.aa.a->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->javax.net.ssl.SSLContext.getDefault->javax.net.ssl.SSLContext.getInstance->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.conscrypt.DefaultSSLContextImpl.<init>->com.android.org.conscrypt.OpenSSLContextImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.getDefaultX509TrustManager->com.android.org.conscrypt.SSLParametersImpl.createDefaultX509TrustManager->javax.net.ssl.TrustManagerFactory.getTrustManagers->android.security.net.config.RootTrustManagerFactorySpi.engineGetTrustManagers->android.security.net.config.ApplicationConfig.getTrustManager->android.security.net.config.ApplicationConfig.ensureInitialized->android.security.net.config.ManifestConfigSource.getPerDomainConfigs->android.security.net.config.ManifestConfigSource.getConfigSource->android.security.net.config.ManifestConfigSource$DefaultConfigSource.<init>->android.security.net.config.NetworkSecurityConfig.getDefaultBuilder->android.security.net.config.UserCertificateSource.getInstance->android.security.net.config.UserCertificateSource$NoPreloadHolder.<clinit>->android.security.net.config.UserCertificateSource.<init>->android.security.net.config.UserCertificateSource.<init>->android.os.Environment.getUserConfigDirectory->java.io.File.<init>->java.io.File.toString->java.io.File.getPath->->/data
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->cmn.aa.a->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->javax.net.ssl.SSLContext.getDefault->javax.net.ssl.SSLContext.getInstance->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.conscrypt.DefaultSSLContextImpl.<init>->com.android.org.conscrypt.OpenSSLContextImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.getDefaultX509TrustManager->com.android.org.conscrypt.SSLParametersImpl.createDefaultX509TrustManager->javax.net.ssl.TrustManagerFactory.getTrustManagers->android.security.net.config.RootTrustManagerFactorySpi.engineGetTrustManagers->android.security.net.config.ApplicationConfig.getTrustManager->android.security.net.config.ApplicationConfig.ensureInitialized->android.security.net.config.ManifestConfigSource.getPerDomainConfigs->android.security.net.config.ManifestConfigSource.getConfigSource->android.security.net.config.ManifestConfigSource$DefaultConfigSource.<init>->android.security.net.config.NetworkSecurityConfig.getDefaultBuilder->android.security.net.config.UserCertificateSource.getInstance->android.security.net.config.UserCertificateSource$NoPreloadHolder.<clinit>->android.security.net.config.UserCertificateSource.<init>->android.security.net.config.UserCertificateSource.<init>->android.os.Environment.getUserConfigDirectory->java.io.File.<init>->java.io.File.toString->java.io.File.getPath->->/datajava.io.File.$init-><<java.io.File>><</data>><<java.lang.String>><<misc>>->/data
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->cmn.aa.a->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->javax.net.ssl.SSLContext.getDefault->javax.net.ssl.SSLContext.getInstance->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.conscrypt.DefaultSSLContextImpl.<init>->com.android.org.conscrypt.OpenSSLContextImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.getDefaultX509TrustManager->com.android.org.conscrypt.SSLParametersImpl.createDefaultX509TrustManager->javax.net.ssl.TrustManagerFactory.getTrustManagers->android.security.net.config.RootTrustManagerFactorySpi.engineGetTrustManagers->android.security.net.config.ApplicationConfig.getTrustManager->android.security.net.config.ApplicationConfig.ensureInitialized->android.security.net.config.ManifestConfigSource.getPerDomainConfigs->android.security.net.config.ManifestConfigSource.getConfigSource->android.security.net.config.ManifestConfigSource$DefaultConfigSource.<init>->android.security.net.config.NetworkSecurityConfig.getDefaultBuilder->android.security.net.config.UserCertificateSource.getInstance->android.security.net.config.UserCertificateSource$NoPreloadHolder.<clinit>->android.security.net.config.UserCertificateSource.<init>->android.security.net.config.UserCertificateSource.<init>->android.os.Environment.getUserConfigDirectory->java.io.File.<init>->java.io.File.toString->java.io.File.getPath->->/data/misc
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->cmn.aa.a->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->javax.net.ssl.SSLContext.getDefault->javax.net.ssl.SSLContext.getInstance->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.conscrypt.DefaultSSLContextImpl.<init>->com.android.org.conscrypt.OpenSSLContextImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.getDefaultX509TrustManager->com.android.org.conscrypt.SSLParametersImpl.createDefaultX509TrustManager->javax.net.ssl.TrustManagerFactory.getTrustManagers->android.security.net.config.RootTrustManagerFactorySpi.engineGetTrustManagers->android.security.net.config.ApplicationConfig.getTrustManager->android.security.net.config.ApplicationConfig.ensureInitialized->android.security.net.config.ManifestConfigSource.getPerDomainConfigs->android.security.net.config.ManifestConfigSource.getConfigSource->android.security.net.config.ManifestConfigSource$DefaultConfigSource.<init>->android.security.net.config.NetworkSecurityConfig.getDefaultBuilder->android.security.net.config.UserCertificateSource.getInstance->android.security.net.config.UserCertificateSource$NoPreloadHolder.<clinit>->android.security.net.config.UserCertificateSource.<init>->android.security.net.config.UserCertificateSource.<init>->android.os.Environment.getUserConfigDirectory->java.io.File.<init>->java.io.File.toString->java.io.File.getPath->->/data/miscjava.io.File.$init-><<java.io.File>><</data/misc>><<java.lang.String>><<user>>->/data/misc
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->cmn.aa.a->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->javax.net.ssl.SSLContext.getDefault->javax.net.ssl.SSLContext.getInstance->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.conscrypt.DefaultSSLContextImpl.<init>->com.android.org.conscrypt.OpenSSLContextImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.getDefaultX509TrustManager->com.android.org.conscrypt.SSLParametersImpl.createDefaultX509TrustManager->javax.net.ssl.TrustManagerFactory.getTrustManagers->android.security.net.config.RootTrustManagerFactorySpi.engineGetTrustManagers->android.security.net.config.ApplicationConfig.getTrustManager->android.security.net.config.ApplicationConfig.ensureInitialized->android.security.net.config.ManifestConfigSource.getPerDomainConfigs->android.security.net.config.ManifestConfigSource.getConfigSource->android.security.net.config.ManifestConfigSource$DefaultConfigSource.<init>->android.security.net.config.NetworkSecurityConfig.getDefaultBuilder->android.security.net.config.UserCertificateSource.getInstance->android.security.net.config.UserCertificateSource$NoPreloadHolder.<clinit>->android.security.net.config.UserCertificateSource.<init>->android.security.net.config.UserCertificateSource.<init>->android.os.Environment.getUserConfigDirectory->java.io.File.<init>->java.io.File.toString->java.io.File.getPath->->/data/misc/user
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->cmn.aa.a->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->javax.net.ssl.SSLContext.getDefault->javax.net.ssl.SSLContext.getInstance->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.conscrypt.DefaultSSLContextImpl.<init>->com.android.org.conscrypt.OpenSSLContextImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.getDefaultX509TrustManager->com.android.org.conscrypt.SSLParametersImpl.createDefaultX509TrustManager->javax.net.ssl.TrustManagerFactory.getTrustManagers->android.security.net.config.RootTrustManagerFactorySpi.engineGetTrustManagers->android.security.net.config.ApplicationConfig.getTrustManager->android.security.net.config.ApplicationConfig.ensureInitialized->android.security.net.config.ManifestConfigSource.getPerDomainConfigs->android.security.net.config.ManifestConfigSource.getConfigSource->android.security.net.config.ManifestConfigSource$DefaultConfigSource.<init>->android.security.net.config.NetworkSecurityConfig.getDefaultBuilder->android.security.net.config.UserCertificateSource.getInstance->android.security.net.config.UserCertificateSource$NoPreloadHolder.<clinit>->android.security.net.config.UserCertificateSource.<init>->android.security.net.config.UserCertificateSource.<init>->android.os.Environment.getUserConfigDirectory->java.io.File.<init>->java.io.File.toString->java.io.File.getPath->->/data/misc/userjava.io.File.$init-><<java.io.File>><</data/misc/user>><<java.lang.String>><<0>>->/data/misc/user
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->cmn.aa.a->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->javax.net.ssl.SSLContext.getDefault->javax.net.ssl.SSLContext.getInstance->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.conscrypt.DefaultSSLContextImpl.<init>->com.android.org.conscrypt.OpenSSLContextImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.getDefaultX509TrustManager->com.android.org.conscrypt.SSLParametersImpl.createDefaultX509TrustManager->javax.net.ssl.TrustManagerFactory.getTrustManagers->android.security.net.config.RootTrustManagerFactorySpi.engineGetTrustManagers->android.security.net.config.ApplicationConfig.getTrustManager->android.security.net.config.ApplicationConfig.ensureInitialized->android.security.net.config.ManifestConfigSource.getPerDomainConfigs->android.security.net.config.ManifestConfigSource.getConfigSource->android.security.net.config.ManifestConfigSource$DefaultConfigSource.<init>->android.security.net.config.NetworkSecurityConfig.getDefaultBuilder->android.security.net.config.UserCertificateSource.getInstance->android.security.net.config.UserCertificateSource$NoPreloadHolder.<clinit>->android.security.net.config.UserCertificateSource.<init>->android.security.net.config.UserCertificateSource.<init>->java.io.File.<init>->java.io.File.toString->java.io.File.getPath->->/data/misc/user/0
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->cmn.aa.a->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->javax.net.ssl.SSLContext.getDefault->javax.net.ssl.SSLContext.getInstance->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.conscrypt.DefaultSSLContextImpl.<init>->com.android.org.conscrypt.OpenSSLContextImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.getDefaultX509TrustManager->com.android.org.conscrypt.SSLParametersImpl.createDefaultX509TrustManager->javax.net.ssl.TrustManagerFactory.getTrustManagers->android.security.net.config.RootTrustManagerFactorySpi.engineGetTrustManagers->android.security.net.config.ApplicationConfig.getTrustManager->android.security.net.config.ApplicationConfig.ensureInitialized->android.security.net.config.ManifestConfigSource.getPerDomainConfigs->android.security.net.config.ManifestConfigSource.getConfigSource->android.security.net.config.ManifestConfigSource$DefaultConfigSource.<init>->android.security.net.config.NetworkSecurityConfig.getDefaultBuilder->android.security.net.config.UserCertificateSource.getInstance->android.security.net.config.UserCertificateSource$NoPreloadHolder.<clinit>->android.security.net.config.UserCertificateSource.<init>->android.security.net.config.UserCertificateSource.<init>->java.io.File.<init>->java.io.File.toString->java.io.File.getPath->->/data/misc/user/0java.io.File.$init-><<java.io.File>><</data/misc/user/0>><<java.lang.String>><<cacerts-added>>->/data/misc/user/0
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->cmn.aa.a->org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager.<init>->org.apache.commons.logging.LogFactory.<clinit>->org.apache.commons.logging.LogFactory.initDiagnostics->java.lang.System.getProperty-><<java.lang.String>><<org.apache.commons.logging.diagnostics.dest>>->null
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->cmn.aa.a->org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager.<init>->org.apache.commons.logging.LogFactory.<clinit>->org.apache.commons.logging.LogFactory.createFactoryStore->java.lang.System.getProperty-><<java.lang.String>><<org.apache.commons.logging.LogFactory.HashtableImpl>>->null
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->cmn.aa.a->org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager.<init>->org.apache.commons.logging.LogFactory.<clinit>->org.apache.commons.logging.LogFactory.createFactoryStore->java.lang.Class.forName->java.lang.Class.forName->java.lang.Class.forName-><<java.lang.String>><<org.apache.commons.logging.impl.WeakHashtable>><<boolean>><<true>><<java.lang.ClassLoader>><<null>>->class org.apache.commons.logging.impl.WeakHashtable
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->cmn.aa.a->org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager.<init>->org.apache.commons.logging.LogFactory.<clinit>->org.apache.commons.logging.LogFactory.createFactoryStore->java.lang.Class.forName-><<java.lang.String>><<org.apache.commons.logging.impl.WeakHashtable>>->class org.apache.commons.logging.impl.WeakHashtable
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.DefaultRequestDirector.execute->org.apache.http.impl.client.DefaultRequestDirector.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineProxy->sun.net.spi.DefaultProxySelector.select->java.security.AccessController.doPrivileged->sun.net.spi.DefaultProxySelector$1.run->sun.net.spi.DefaultProxySelector$1.run->sun.net.NetProperties.<clinit>->java.security.AccessController.doPrivileged->sun.net.NetProperties$1.run->sun.net.NetProperties$1.run->sun.net.NetProperties.-wrap0->sun.net.NetProperties.loadDefaultProperties->java.io.File.$init-><<java.lang.String>><</system>><<java.lang.String>><<lib>>->undefined
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.DefaultRequestDirector.execute->org.apache.http.impl.client.DefaultRequestDirector.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineProxy->sun.net.spi.DefaultProxySelector.select->java.security.AccessController.doPrivileged->sun.net.spi.DefaultProxySelector$1.run->sun.net.spi.DefaultProxySelector$1.run->sun.net.NetProperties.<clinit>->java.security.AccessController.doPrivileged->sun.net.NetProperties$1.run->sun.net.NetProperties$1.run->sun.net.NetProperties.-wrap0->sun.net.NetProperties.loadDefaultProperties->java.io.File.<init>->java.io.File.toString->java.io.File.getPath->->/system/lib
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.DefaultRequestDirector.execute->org.apache.http.impl.client.DefaultRequestDirector.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineProxy->sun.net.spi.DefaultProxySelector.select->java.security.AccessController.doPrivileged->sun.net.spi.DefaultProxySelector$1.run->sun.net.spi.DefaultProxySelector$1.run->sun.net.NetProperties.<clinit>->java.security.AccessController.doPrivileged->sun.net.NetProperties$1.run->sun.net.NetProperties$1.run->sun.net.NetProperties.-wrap0->sun.net.NetProperties.loadDefaultProperties->java.io.File.<init>->java.io.File.toString->java.io.File.getPath->->/system/libjava.io.File.$init-><<java.io.File>><</system/lib>><<java.lang.String>><<net.properties>>->/system/lib
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.DefaultRequestDirector.execute->org.apache.http.impl.client.DefaultRequestDirector.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineProxy->sun.net.spi.DefaultProxySelector.select->java.security.AccessController.doPrivileged->sun.net.spi.DefaultProxySelector$1.run->sun.net.spi.DefaultProxySelector$1.run->sun.net.NetProperties.<clinit>->java.security.AccessController.doPrivileged->sun.net.NetProperties$1.run->sun.net.NetProperties$1.run->sun.net.NetProperties.-wrap0->sun.net.NetProperties.loadDefaultProperties->java.io.File.getCanonicalPath->java.io.UnixFileSystem.resolve->java.io.File.getPath->->/system/lib/net.properties
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.DefaultRequestDirector.execute->org.apache.http.impl.client.DefaultRequestDirector.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineProxy->sun.net.spi.DefaultProxySelector.select->java.security.AccessController.doPrivileged->sun.net.spi.DefaultProxySelector$1.run->sun.net.spi.DefaultProxySelector$1.run->sun.net.NetProperties.<clinit>->java.security.AccessController.doPrivileged->sun.net.NetProperties$1.run->sun.net.NetProperties$1.run->sun.net.NetProperties.-wrap0->sun.net.NetProperties.loadDefaultProperties->java.io.FileInputStream.<init>->java.io.File.$init-><<java.lang.String>><</system/lib/net.properties>>->undefined
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.DefaultRequestDirector.execute->org.apache.http.impl.client.DefaultRequestDirector.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineProxy->sun.net.spi.DefaultProxySelector.select->java.security.AccessController.doPrivileged->sun.net.spi.DefaultProxySelector$1.run->sun.net.spi.DefaultProxySelector$1.run->sun.net.NetProperties.<clinit>->java.security.AccessController.doPrivileged->sun.net.NetProperties$1.run->sun.net.NetProperties$1.run->sun.net.NetProperties.-wrap0->sun.net.NetProperties.loadDefaultProperties->java.io.FileInputStream.<init>->java.io.FileInputStream.<init>->java.io.File.getPath->->/system/lib/net.properties
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.DefaultRequestDirector.execute->org.apache.http.impl.client.DefaultRequestDirector.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineProxy->sun.net.spi.DefaultProxySelector.select->java.security.AccessController.doPrivileged->sun.net.spi.DefaultProxySelector$1.run->sun.net.spi.DefaultProxySelector$1.run->sun.net.NetProperties.get->java.lang.System.getProperty-><<java.lang.String>><<http.proxyHost>><<java.lang.String>><<null>>->null
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.DefaultRequestDirector.execute->org.apache.http.impl.client.DefaultRequestDirector.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineProxy->sun.net.spi.DefaultProxySelector.select->java.security.AccessController.doPrivileged->sun.net.spi.DefaultProxySelector$1.run->sun.net.spi.DefaultProxySelector$1.run->sun.net.NetProperties.get->java.lang.System.getProperty-><<java.lang.String>><<proxyHost>><<java.lang.String>><<null>>->null
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.DefaultRequestDirector.execute->org.apache.http.impl.client.DefaultRequestDirector.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineProxy->sun.net.spi.DefaultProxySelector.select->java.security.AccessController.doPrivileged->sun.net.spi.DefaultProxySelector$1.run->sun.net.spi.DefaultProxySelector$1.run->sun.net.NetProperties.get->java.lang.System.getProperty-><<java.lang.String>><<socksProxyHost>><<java.lang.String>><<null>>->null
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.DefaultRequestDirector.execute->org.apache.http.impl.client.DefaultRequestDirector.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineProxy->sun.net.spi.DefaultProxySelector.select->java.security.AccessController.doPrivileged->sun.net.spi.DefaultProxySelector$1.run->sun.net.spi.DefaultProxySelector$1.run->sun.net.NetProperties.get->java.lang.System.getProperty-><<java.lang.String>><<http.proxyHost>><<java.lang.String>><<null>>->null
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.DefaultRequestDirector.execute->org.apache.http.impl.client.DefaultRequestDirector.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineProxy->sun.net.spi.DefaultProxySelector.select->java.security.AccessController.doPrivileged->sun.net.spi.DefaultProxySelector$1.run->sun.net.spi.DefaultProxySelector$1.run->sun.net.NetProperties.get->java.lang.System.getProperty-><<java.lang.String>><<proxyHost>><<java.lang.String>><<null>>->null
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.DefaultRequestDirector.execute->org.apache.http.impl.client.DefaultRequestDirector.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineProxy->sun.net.spi.DefaultProxySelector.select->java.security.AccessController.doPrivileged->sun.net.spi.DefaultProxySelector$1.run->sun.net.spi.DefaultProxySelector$1.run->sun.net.NetProperties.get->java.lang.System.getProperty-><<java.lang.String>><<socksProxyHost>><<java.lang.String>><<null>>->null
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.DefaultRequestDirector.execute->org.apache.http.impl.client.DefaultRequestDirector.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineProxy->sun.net.spi.DefaultProxySelector.select->java.security.AccessController.doPrivileged->sun.net.spi.DefaultProxySelector$1.run->sun.net.spi.DefaultProxySelector$1.run->sun.net.NetProperties.get->java.lang.System.getProperty-><<java.lang.String>><<http.proxyHost>><<java.lang.String>><<null>>->null
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.DefaultRequestDirector.execute->org.apache.http.impl.client.DefaultRequestDirector.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineProxy->sun.net.spi.DefaultProxySelector.select->java.security.AccessController.doPrivileged->sun.net.spi.DefaultProxySelector$1.run->sun.net.spi.DefaultProxySelector$1.run->sun.net.NetProperties.get->java.lang.System.getProperty-><<java.lang.String>><<proxyHost>><<java.lang.String>><<null>>->null
com.appbrain.a.bk.a->com.appbrain.a.bj.a->com.appbrain.a.bf.a->com.appbrain.f.c.b->cmn.aa.a->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.DefaultRequestDirector.execute->org.apache.http.impl.client.DefaultRequestDirector.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineProxy->sun.net.spi.DefaultProxySelector.select->java.security.AccessController.doPrivileged->sun.net.spi.DefaultProxySelector$1.run->sun.net.spi.DefaultProxySelector$1.run->sun.net.NetProperties.get->java.lang.System.getProperty-><<java.lang.String>><<socksProxyHost>><<java.lang.String>><<null>>->null
android.app.SharedPreferencesImpl.getLong-><<java.lang.String>><<last_check_ping>><<long>><<0>>->0
android.app.SharedPreferencesImpl.getLong-><<java.lang.String>><<errorcount_ping>><<long>><<0>>->0
org.andengine.util.debug.Debug.d->android.util.Log.d->android.util.Log.printlns->com.android.internal.util.LineBreakBufferedWriter.<init>->com.android.internal.util.LineBreakBufferedWriter.<init>->java.lang.System.getProperty-><<java.lang.String>><<line.separator>>->

java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap26->android.app.ActivityThread.handleStopService->android.app.QueuedWork.waitToFinish->android.app.QueuedWork.processPendingWork->android.app.SharedPreferencesImpl$2.run->android.app.SharedPreferencesImpl.-wrap2->android.app.SharedPreferencesImpl.writeToFile->java.io.File.exists->->true
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap26->android.app.ActivityThread.handleStopService->android.app.QueuedWork.waitToFinish->android.app.QueuedWork.processPendingWork->android.app.SharedPreferencesImpl$2.run->android.app.SharedPreferencesImpl.-wrap2->android.app.SharedPreferencesImpl.writeToFile->java.io.File.exists->->false
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap26->android.app.ActivityThread.handleStopService->android.app.QueuedWork.waitToFinish->android.app.QueuedWork.processPendingWork->android.app.SharedPreferencesImpl$2.run->android.app.SharedPreferencesImpl.-wrap2->android.app.SharedPreferencesImpl.writeToFile->java.io.File.renameTo->java.io.File.toString->java.io.File.getPath->->/data/user/0/com.zharski.FireSnake/shared_prefs/ab_sdk_pref.xml.bak
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap26->android.app.ActivityThread.handleStopService->android.app.QueuedWork.waitToFinish->android.app.QueuedWork.processPendingWork->android.app.SharedPreferencesImpl$2.run->android.app.SharedPreferencesImpl.-wrap2->android.app.SharedPreferencesImpl.writeToFile->java.io.File.renameTo->java.io.File.toString->java.io.File.getPath->->/data/user/0/com.zharski.FireSnake/shared_prefs/ab_sdk_pref.xml.bakjava.io.File.renameTo-><<java.io.File>><</data/user/0/com.zharski.FireSnake/shared_prefs/ab_sdk_pref.xml.bak>>->/data/user/0/com.zharski.FireSnake/shared_prefs/ab_sdk_pref.xml.bak
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap26->android.app.ActivityThread.handleStopService->android.app.QueuedWork.waitToFinish->android.app.QueuedWork.processPendingWork->android.app.SharedPreferencesImpl$2.run->android.app.SharedPreferencesImpl.-wrap2->android.app.SharedPreferencesImpl.writeToFile->java.lang.StringBuilder.append->java.lang.String.valueOf->java.io.File.toString->java.io.File.getPath->->/data/user/0/com.zharski.FireSnake/shared_prefs/ab_sdk_pref.xml
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap26->android.app.ActivityThread.handleStopService->android.app.QueuedWork.waitToFinish->android.app.QueuedWork.processPendingWork->android.app.SharedPreferencesImpl$2.run->android.app.SharedPreferencesImpl.-wrap2->android.app.SharedPreferencesImpl.writeToFile->java.lang.StringBuilder.append->java.lang.String.valueOf->java.io.File.toString->java.io.File.getPath->->/data/user/0/com.zharski.FireSnake/shared_prefs/ab_sdk_pref.xml.bak
