java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.ActivityThread.createBaseContextForActivity->android.app.ContextImpl.createActivityContext->android.app.ContextImpl.<init>->java.util.Objects.equals->java.io.File.equals->java.io.File.compareTo->java.io.UnixFileSystem.compare->java.io.File.getPath->->/data/user/0/com.makemedroid.keyf6357425
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.ActivityThread.createBaseContextForActivity->android.app.ContextImpl.createActivityContext->android.app.ContextImpl.<init>->java.util.Objects.equals->java.io.File.equals->java.io.File.compareTo->java.io.UnixFileSystem.compare->java.io.File.getPath->->/data/user/0/com.makemedroid.keyf6357425
libcore.reflect.Types.getTypeArray->libcore.reflect.ListOfTypes.getResolvedTypes->libcore.reflect.ListOfTypes.resolveTypes->libcore.reflect.ParameterizedTypeImpl.getResolvedType->libcore.reflect.ParameterizedTypeImpl.getRawType->java.lang.Class.forName-><<java.lang.String>><<android.content.Context>><<boolean>><<false>><<java.lang.ClassLoader>><<java.lang.BootClassLoader@19da755>>->class android.content.Context
java.lang.Class.forName-><<java.lang.String>><<java.lang.Class>><<boolean>><<false>><<java.lang.ClassLoader>><<java.lang.BootClassLoader@19da755>>->class java.lang.Class
libcore.reflect.Types.getTypeArray->libcore.reflect.ListOfTypes.getResolvedTypes->libcore.reflect.ListOfTypes.resolveTypes->libcore.reflect.ParameterizedTypeImpl.getResolvedType->libcore.reflect.ParameterizedTypeImpl.getRawType->java.lang.Class.forName-><<java.lang.String>><<java.lang.String>><<boolean>><<false>><<java.lang.ClassLoader>><<java.lang.BootClassLoader@19da755>>->class java.lang.String
libcore.reflect.Types.getTypeArray->libcore.reflect.ListOfTypes.getResolvedTypes->libcore.reflect.ListOfTypes.resolveTypes->libcore.reflect.ParameterizedTypeImpl.getResolvedType->libcore.reflect.ParameterizedTypeImpl.getRawType->java.lang.Class.forName-><<java.lang.String>><<android.net.Uri>><<boolean>><<false>><<java.lang.ClassLoader>><<java.lang.BootClassLoader@19da755>>->class android.net.Uri
libcore.reflect.Types.getTypeArray->libcore.reflect.ListOfTypes.getResolvedTypes->libcore.reflect.ListOfTypes.resolveTypes->libcore.reflect.ParameterizedTypeImpl.getResolvedType->libcore.reflect.ParameterizedTypeImpl.getRawType->java.lang.Class.forName-><<java.lang.String>><<android.content.Context>><<boolean>><<false>><<java.lang.ClassLoader>><<java.lang.BootClassLoader@19da755>>->class android.content.Context
java.lang.Class.forName-><<java.lang.String>><<java.lang.Class>><<boolean>><<false>><<java.lang.ClassLoader>><<java.lang.BootClassLoader@19da755>>->class java.lang.Class
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.AppControl.allowedToRun->android.content.ContextWrapper.getSharedPreferences->android.content.ContextWrapper.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.app.ContextImpl.getSharedPreferencesPath->android.app.ContextImpl.getPreferencesDir->android.app.ContextImpl.getDataDir->java.io.File.exists->->true
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.AppControl.allowedToRun->android.content.ContextWrapper.getSharedPreferences->android.content.ContextWrapper.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.app.ContextImpl.getSharedPreferencesPath->android.app.ContextImpl.getPreferencesDir->java.io.File.<init>->java.io.File.toString->java.io.File.getPath->->/data/user/0/com.makemedroid.keyf6357425
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.AppControl.allowedToRun->android.content.ContextWrapper.getSharedPreferences->android.content.ContextWrapper.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.app.ContextImpl.getSharedPreferencesPath->android.app.ContextImpl.getPreferencesDir->java.io.File.<init>->java.io.File.toString->java.io.File.getPath->->/data/user/0/com.makemedroid.keyf6357425java.io.File.$init-><<java.io.File>><</data/user/0/com.makemedroid.keyf6357425>><<java.lang.String>><<shared_prefs>>->/data/user/0/com.makemedroid.keyf6357425
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.AppControl.allowedToRun->android.content.ContextWrapper.getSharedPreferences->android.content.ContextWrapper.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.app.ContextImpl.getSharedPreferencesPath->android.app.ContextImpl.getPreferencesDir->android.app.ContextImpl.ensurePrivateDirExists->android.app.ContextImpl.ensurePrivateDirExists->java.io.File.exists->->true
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.AppControl.allowedToRun->android.content.ContextWrapper.getSharedPreferences->android.content.ContextWrapper.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.app.ContextImpl.getSharedPreferencesPath->android.app.ContextImpl.makeFilename->java.io.File.<init>->java.io.File.toString->java.io.File.getPath->->/data/user/0/com.makemedroid.keyf6357425/shared_prefs
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.AppControl.allowedToRun->android.content.ContextWrapper.getSharedPreferences->android.content.ContextWrapper.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.app.ContextImpl.getSharedPreferencesPath->android.app.ContextImpl.makeFilename->java.io.File.<init>->java.io.File.toString->java.io.File.getPath->->/data/user/0/com.makemedroid.keyf6357425/shared_prefsjava.io.File.$init-><<java.io.File>><</data/user/0/com.makemedroid.keyf6357425/shared_prefs>><<java.lang.String>><<MMDPrefskeyf6357425.xml>>->/data/user/0/com.makemedroid.keyf6357425/shared_prefs
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.AppControl.allowedToRun->android.content.ContextWrapper.getSharedPreferences->android.content.ContextWrapper.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.util.ArrayMap.get->android.util.ArrayMap.indexOfKey->java.io.File.hashCode->java.io.UnixFileSystem.hashCode->java.io.File.getPath->->/data/user/0/com.makemedroid.keyf6357425/shared_prefs/MMDPrefskeyf6357425.xml
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.AppControl.allowedToRun->android.content.ContextWrapper.getSharedPreferences->android.content.ContextWrapper.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.util.ArrayMap.get->android.util.ArrayMap.indexOfKey->android.util.ArrayMap.indexOf->java.io.File.equals->java.io.File.compareTo->java.io.UnixFileSystem.compare->java.io.File.getPath->->/data/user/0/com.makemedroid.keyf6357425/shared_prefs/MMDPrefskeyf6357425.xml
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.AppControl.allowedToRun->android.content.ContextWrapper.getSharedPreferences->android.content.ContextWrapper.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.util.ArrayMap.get->android.util.ArrayMap.indexOfKey->android.util.ArrayMap.indexOf->java.io.File.equals->java.io.File.compareTo->java.io.UnixFileSystem.compare->java.io.File.getPath->->/data/user/0/com.makemedroid.keyf6357425/shared_prefs/MMDPrefskeyf6357425.xml
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.AppControl.allowedToRun->android.content.ContextWrapper.getSharedPreferences->android.content.ContextWrapper.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.app.SharedPreferencesImpl.startReloadIfChangedUnexpectedly->android.app.SharedPreferencesImpl.hasFileChangedUnexpectedly->java.io.File.getPath->->/data/user/0/com.makemedroid.keyf6357425/shared_prefs/MMDPrefskeyf6357425.xml
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.AppControl.allowedToRun->android.content.ContextWrapper.getSharedPreferences-><<java.lang.String>><<MMDPrefskeyf6357425>><<int>><<0>>->[object Object]
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.AppControl.allowedToRun->android.app.SharedPreferencesImpl.getBoolean-><<java.lang.String>><<blockedapplication>><<boolean>><<false>>->false
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.StateMachine.setExitStateId->android.content.ContextWrapper.getSharedPreferences->android.content.ContextWrapper.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.util.ArrayMap.get->android.util.ArrayMap.indexOfKey->java.io.File.hashCode->java.io.UnixFileSystem.hashCode->java.io.File.getPath->->/data/user/0/com.makemedroid.keyf6357425/shared_prefs/MMDPrefskeyf6357425.xml
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.StateMachine.setExitStateId->android.content.ContextWrapper.getSharedPreferences->android.content.ContextWrapper.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.util.ArrayMap.get->android.util.ArrayMap.indexOfKey->android.util.ArrayMap.indexOf->java.io.File.equals->java.io.File.compareTo->java.io.UnixFileSystem.compare->java.io.File.getPath->->/data/user/0/com.makemedroid.keyf6357425/shared_prefs/MMDPrefskeyf6357425.xml
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.StateMachine.setExitStateId->android.content.ContextWrapper.getSharedPreferences->android.content.ContextWrapper.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.util.ArrayMap.get->android.util.ArrayMap.indexOfKey->android.util.ArrayMap.indexOf->java.io.File.equals->java.io.File.compareTo->java.io.UnixFileSystem.compare->java.io.File.getPath->->/data/user/0/com.makemedroid.keyf6357425/shared_prefs/MMDPrefskeyf6357425.xml
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.StateMachine.setExitStateId->android.content.ContextWrapper.getSharedPreferences->android.content.ContextWrapper.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.app.ContextImpl.getSharedPreferences->android.app.SharedPreferencesImpl.startReloadIfChangedUnexpectedly->android.app.SharedPreferencesImpl.hasFileChangedUnexpectedly->java.io.File.getPath->->/data/user/0/com.makemedroid.keyf6357425/shared_prefs/MMDPrefskeyf6357425.xml
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.StateMachine.setExitStateId->android.content.ContextWrapper.getSharedPreferences-><<java.lang.String>><<MMDPrefskeyf6357425>><<int>><<0>>->[object Object]
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.StateMachine.setExitStateId->android.app.SharedPreferencesImpl$EditorImpl.commit->android.app.SharedPreferencesImpl.-wrap0->android.app.SharedPreferencesImpl.enqueueDiskWrite->android.app.SharedPreferencesImpl$2.run->android.app.SharedPreferencesImpl.-wrap2->android.app.SharedPreferencesImpl.writeToFile->java.io.File.exists->->true
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.StateMachine.setExitStateId->android.app.SharedPreferencesImpl$EditorImpl.commit->android.app.SharedPreferencesImpl.-wrap0->android.app.SharedPreferencesImpl.enqueueDiskWrite->android.app.SharedPreferencesImpl$2.run->android.app.SharedPreferencesImpl.-wrap2->android.app.SharedPreferencesImpl.writeToFile->java.io.File.exists->->false
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.StateMachine.setExitStateId->android.app.SharedPreferencesImpl$EditorImpl.commit->android.app.SharedPreferencesImpl.-wrap0->android.app.SharedPreferencesImpl.enqueueDiskWrite->android.app.SharedPreferencesImpl$2.run->android.app.SharedPreferencesImpl.-wrap2->android.app.SharedPreferencesImpl.writeToFile->java.io.File.renameTo->java.io.File.toString->java.io.File.getPath->->/data/user/0/com.makemedroid.keyf6357425/shared_prefs/MMDPrefskeyf6357425.xml.bak
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.StateMachine.setExitStateId->android.app.SharedPreferencesImpl$EditorImpl.commit->android.app.SharedPreferencesImpl.-wrap0->android.app.SharedPreferencesImpl.enqueueDiskWrite->android.app.SharedPreferencesImpl$2.run->android.app.SharedPreferencesImpl.-wrap2->android.app.SharedPreferencesImpl.writeToFile->java.io.File.renameTo->java.io.File.toString->java.io.File.getPath->->/data/user/0/com.makemedroid.keyf6357425/shared_prefs/MMDPrefskeyf6357425.xml.bakjava.io.File.renameTo-><<java.io.File>><</data/user/0/com.makemedroid.keyf6357425/shared_prefs/MMDPrefskeyf6357425.xml.bak>>->/data/user/0/com.makemedroid.keyf6357425/shared_prefs/MMDPrefskeyf6357425.xml.bak
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.StateMachine.setExitStateId->android.app.SharedPreferencesImpl$EditorImpl.commit->android.app.SharedPreferencesImpl.-wrap0->android.app.SharedPreferencesImpl.enqueueDiskWrite->android.app.SharedPreferencesImpl$2.run->android.app.SharedPreferencesImpl.-wrap2->android.app.SharedPreferencesImpl.writeToFile->java.lang.StringBuilder.append->java.lang.String.valueOf->java.io.File.toString->java.io.File.getPath->->/data/user/0/com.makemedroid.keyf6357425/shared_prefs/MMDPrefskeyf6357425.xml
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.StateMachine.setExitStateId->android.app.SharedPreferencesImpl$EditorImpl.commit->android.app.SharedPreferencesImpl.-wrap0->android.app.SharedPreferencesImpl.enqueueDiskWrite->android.app.SharedPreferencesImpl$2.run->android.app.SharedPreferencesImpl.-wrap2->android.app.SharedPreferencesImpl.writeToFile->java.lang.StringBuilder.append->java.lang.String.valueOf->java.io.File.toString->java.io.File.getPath->->/data/user/0/com.makemedroid.keyf6357425/shared_prefs/MMDPrefskeyf6357425.xml.bak
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.StateMachine.browse->com.makemedroid.keyf6357425.model.StateMachine.browseShowScreen->com.makemedroid.keyf6357425.model.StateMachine.browseShowScreen->android.content.Intent.$init-><<android.content.Context>><<com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash@b60a02f>><<java.lang.Object>><<class com.makemedroid.keyf6357425.activities.FreeLayoutActivity>>->undefined
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.StateMachine.browse->com.makemedroid.keyf6357425.model.StateMachine.browseShowScreen->com.makemedroid.keyf6357425.model.StateMachine.browseShowScreen->android.content.Intent.putExtra-><<java.lang.String>><<stateid>><<java.lang.String>><<Ecran accueil>>->Intent { cmp=com.makemedroid.keyf6357425/.activities.FreeLayoutActivity (has extras) }
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.StateMachine.browse->com.makemedroid.keyf6357425.model.StateMachine.browseShowScreen->com.makemedroid.keyf6357425.model.StateMachine.browseShowScreen->com.makemedroid.keyf6357425.model.AnimationMng.beforeLaunchingScreen->android.content.Intent.putExtra->android.content.Intent.putExtra-><<java.lang.String>><<goanim>><<android.os.Bundle>><<null>>->Intent { cmp=com.makemedroid.keyf6357425/.activities.FreeLayoutActivity (has extras) }
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.StateMachine.browse->com.makemedroid.keyf6357425.model.StateMachine.browseShowScreen->com.makemedroid.keyf6357425.model.StateMachine.browseShowScreen->com.makemedroid.keyf6357425.model.AnimationMng.beforeLaunchingScreen->android.content.Intent.putExtra-><<java.lang.String>><<goanim>><<java.lang.String>><<null>>->Intent { cmp=com.makemedroid.keyf6357425/.activities.FreeLayoutActivity (has extras) }
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.StateMachine.browse->com.makemedroid.keyf6357425.model.StateMachine.browseShowScreen->com.makemedroid.keyf6357425.model.StateMachine.browseShowScreen->com.makemedroid.keyf6357425.model.AnimationMng.beforeLaunchingScreen->android.content.Intent.putExtra->android.content.Intent.putExtra-><<java.lang.String>><<backanim>><<android.os.Bundle>><<null>>->Intent { cmp=com.makemedroid.keyf6357425/.MyeAppMainActivitySecondSplash (has extras) }
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.StateMachine.browse->com.makemedroid.keyf6357425.model.StateMachine.browseShowScreen->com.makemedroid.keyf6357425.model.StateMachine.browseShowScreen->com.makemedroid.keyf6357425.model.AnimationMng.beforeLaunchingScreen->android.content.Intent.putExtra-><<java.lang.String>><<backanim>><<java.lang.String>><<null>>->Intent { cmp=com.makemedroid.keyf6357425/.MyeAppMainActivitySecondSplash (has extras) }
com.makemedroid.keyf6357425.MyeAppMainActivitySecondSplash$SplashTimer.run->com.makemedroid.keyf6357425.model.StateMachine.start->com.makemedroid.keyf6357425.model.StateMachine.browse->com.makemedroid.keyf6357425.model.StateMachine.browseShowScreen->com.makemedroid.keyf6357425.model.StateMachine.browseShowScreen->android.app.Activity.startActivityForResult->android.app.Activity.startActivityForResult->android.app.Activity.startActivityForResult-><<android.content.Intent>><<Intent { cmp=com.makemedroid.keyf6357425/.activities.FreeLayoutActivity (has extras) }>><<int>><<0>><<android.os.Bundle>><<null>>->undefined
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.ActivityThread.createBaseContextForActivity->android.app.ContextImpl.createActivityContext->android.app.ContextImpl.<init>->java.util.Objects.equals->java.io.File.equals->java.io.File.compareTo->java.io.UnixFileSystem.compare->java.io.File.getPath->->/data/user/0/com.makemedroid.keyf6357425
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.ActivityThread.createBaseContextForActivity->android.app.ContextImpl.createActivityContext->android.app.ContextImpl.<init>->java.util.Objects.equals->java.io.File.equals->java.io.File.compareTo->java.io.UnixFileSystem.compare->android.app.Activity.startActivityForResult-><<android.content.Intent>><<Intent { cmp=com.makemedroid.keyf6357425/.activities.FreeLayoutActivity (has extras) }>><<int>><<0>>->/data/user/0/com.makemedroid.keyf6357425
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.ActivityThread.createBaseContextForActivity->android.app.ContextImpl.createActivityContext->android.app.ContextImpl.<init>->java.util.Objects.equals->java.io.File.equals->java.io.File.compareTo->java.io.UnixFileSystem.compare->android.app.Activity.startActivityForResult-><<android.content.Intent>><<Intent { cmp=com.makemedroid.keyf6357425/.activities.FreeLayoutActivity (has extras) }>><<int>><<0>>->/data/user/0/com.makemedroid.keyf6357425java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.ActivityThread.createBaseContextForActivity->android.app.ContextImpl.createActivityContext->android.app.ContextImpl.<init>->java.util.Objects.equals->java.io.File.equals->java.io.File.compareTo->java.io.UnixFileSystem.compare->java.io.File.getPath->->/data/user/0/com.makemedroid.keyf6357425
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.makemedroid.keyf6357425.activities.FreeLayoutActivity.onCreate->android.app.Activity.onCreate-><<android.os.Bundle>><<null>>->undefined
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.makemedroid.keyf6357425.activities.FreeLayoutActivity.onCreate->com.makemedroid.keyf6357425.controls.ct.FreeLayoutCT.initLayout->com.makemedroid.keyf6357425.controls.ct.FreeLayoutCT.mainAreaInit->com.makemedroid.keyf6357425.controls.ct.VBarCT.initLayout->com.makemedroid.keyf6357425.controls.ct.VBarCT.initLayout->com.makemedroid.keyf6357425.controls.ct.HBarCT.initLayout->com.makemedroid.keyf6357425.controls.ct.PictureCT.initLayout->com.makemedroid.keyf6357425.model.Utils.getAppConfigurationFolder->com.makemedroid.keyf6357425.model.Utils.getRootFolder->android.os.Environment.getExternalStorageDirectory->android.os.Environment.getExternalStorageDirectory->android.os.Environment$UserEnvironment.getExternalDirs->android.os.storage.StorageManager.getVolumeList->android.os.storage.IStorageManager$Stub$Proxy.getVolumeList->android.os.Parcel.createTypedArray->android.os.storage.StorageVolume$1.createFromParcel->android.os.storage.StorageVolume$1.createFromParcel->android.os.storage.StorageVolume.<init>->android.os.storage.StorageVolume.<init>->java.io.File.$init-><<java.lang.String>><</storage/emulated/0>>->undefined
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.makemedroid.keyf6357425.activities.FreeLayoutActivity.onCreate->com.makemedroid.keyf6357425.controls.ct.FreeLayoutCT.initLayout->com.makemedroid.keyf6357425.controls.ct.FreeLayoutCT.mainAreaInit->com.makemedroid.keyf6357425.controls.ct.VBarCT.initLayout->com.makemedroid.keyf6357425.controls.ct.VBarCT.initLayout->com.makemedroid.keyf6357425.controls.ct.HBarCT.initLayout->com.makemedroid.keyf6357425.controls.ct.PictureCT.initLayout->com.makemedroid.keyf6357425.model.Utils.getAppConfigurationFolder->com.makemedroid.keyf6357425.model.Utils.getRootFolder->android.os.Environment.getExternalStorageDirectory->java.io.File.toString->java.io.File.getPath->->/storage/emulated/0
java.lang.reflect.Method.invoke->android.app.ActivityThread.main->android.os.Looper.loop->android.os.Handler.dispatchMessage->android.app.ActivityThread$H.handleMessage->android.app.ActivityThread.-wrap11->android.app.ActivityThread.handleLaunchActivity->android.app.ActivityThread.performLaunchActivity->android.app.Instrumentation.callActivityOnCreate->android.app.Activity.performCreate->android.app.Activity.performCreate->com.makemedroid.keyf6357425.activities.FreeLayoutActivity.onCreate->com.makemedroid.keyf6357425.controls.ct.FreeLayoutCT.initLayout->com.makemedroid.keyf6357425.controls.ct.FreeLayoutCT.mainAreaInit->com.makemedroid.keyf6357425.controls.ct.VBarCT.initLayout->com.makemedroid.keyf6357425.controls.ct.VBarCT.initLayout->com.makemedroid.keyf6357425.controls.ct.HBarCT.initLayout->com.makemedroid.keyf6357425.controls.ct.PictureCT.initLayout->com.makemedroid.keyf6357425.model.Utils.getAppConfigurationFolder->com.makemedroid.keyf6357425.model.Utils.getRootFolder->android.os.Environment.getExternalStorageDirectory->java.io.File.toString->java.io.File.getPath->->/storage/emulated/0android.os.Environment.getExternalStorageDirectory->->/storage/emulated/0
com.android.internal.os.RuntimeInit.-wrap0->com.android.internal.os.RuntimeInit.Clog_e->android.util.Log.printlns->com.android.internal.util.LineBreakBufferedWriter.<init>->com.android.internal.util.LineBreakBufferedWriter.<init>->java.lang.System.getProperty-><<java.lang.String>><<line.separator>>->

java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->org.apache.http.impl.client.DefaultHttpClient.<init>->org.apache.http.impl.client.AbstractHttpClient.<init>->org.apache.commons.logging.LogFactory.<clinit>->org.apache.commons.logging.LogFactory.initDiagnostics->java.lang.System.getProperty-><<java.lang.String>><<org.apache.commons.logging.diagnostics.dest>>->null
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->org.apache.http.impl.client.DefaultHttpClient.<init>->org.apache.http.impl.client.AbstractHttpClient.<init>->org.apache.commons.logging.LogFactory.<clinit>->org.apache.commons.logging.LogFactory.createFactoryStore->java.lang.System.getProperty-><<java.lang.String>><<org.apache.commons.logging.LogFactory.HashtableImpl>>->null
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->org.apache.http.impl.client.DefaultHttpClient.<init>->org.apache.http.impl.client.AbstractHttpClient.<init>->org.apache.commons.logging.LogFactory.<clinit>->org.apache.commons.logging.LogFactory.createFactoryStore->java.lang.Class.forName->java.lang.Class.forName->java.lang.Class.forName-><<java.lang.String>><<org.apache.commons.logging.impl.WeakHashtable>><<boolean>><<true>><<java.lang.ClassLoader>><<null>>->class org.apache.commons.logging.impl.WeakHashtable
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->org.apache.http.impl.client.DefaultHttpClient.<init>->org.apache.http.impl.client.AbstractHttpClient.<init>->org.apache.commons.logging.LogFactory.<clinit>->org.apache.commons.logging.LogFactory.createFactoryStore->java.lang.Class.forName-><<java.lang.String>><<org.apache.commons.logging.impl.WeakHashtable>>->class org.apache.commons.logging.impl.WeakHashtable
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->com.bugsense.trace.BugSense.createJSON->org.json.JSONObject.toString->org.json.JSONObject.writeTo->org.json.JSONStringer.value->org.json.JSONObject.writeTo->org.json.JSONStringer.value->java.util.Date.toString->java.util.TimeZone.getDisplayName->android.icu.text.TimeZoneNames.<clinit>->android.icu.impl.ICUConfig.get->java.lang.System.getProperty-><<java.lang.String>><<android.icu.text.TimeZoneNames.Factory.impl>>->null
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->com.bugsense.trace.BugSense.createJSON->org.json.JSONObject.toString->org.json.JSONObject.writeTo->org.json.JSONStringer.value->org.json.JSONObject.writeTo->org.json.JSONStringer.value->java.util.Date.toString->java.util.TimeZone.getDisplayName->android.icu.text.TimeZoneNames.<clinit>->java.lang.Class.forName->java.lang.Class.forName->java.lang.Class.forName-><<java.lang.String>><<android.icu.impl.TimeZoneNamesFactoryImpl>><<boolean>><<true>><<java.lang.ClassLoader>><<null>>->class android.icu.impl.TimeZoneNamesFactoryImpl
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->com.bugsense.trace.BugSense.createJSON->org.json.JSONObject.toString->org.json.JSONObject.writeTo->org.json.JSONStringer.value->org.json.JSONObject.writeTo->org.json.JSONStringer.value->java.util.Date.toString->java.util.TimeZone.getDisplayName->android.icu.text.TimeZoneNames.<clinit>->java.lang.Class.forName-><<java.lang.String>><<android.icu.impl.TimeZoneNamesFactoryImpl>>->class android.icu.impl.TimeZoneNamesFactoryImpl
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.getConnectionManager->org.apache.http.impl.client.DefaultHttpClient.createClientConnectionManager->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->java.lang.Class.forName->java.lang.Class.forName->java.lang.Class.forName->java.lang.Class.classForName->com.android.org.conscrypt.OpenSSLSocketFactoryImpl.<clinit>->com.android.org.conscrypt.SSLUtils.<clinit>->java.lang.System.getProperty-><<java.lang.String>><<com.android.org.conscrypt.useEngineSocketByDefault>><<java.lang.String>><<false>>->false
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.getConnectionManager->org.apache.http.impl.client.DefaultHttpClient.createClientConnectionManager->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->java.lang.Class.forName->java.lang.Class.forName-><<java.lang.String>><<com.android.org.conscrypt.OpenSSLSocketFactoryImpl>><<boolean>><<true>><<java.lang.ClassLoader>><<null>>->class com.android.org.conscrypt.OpenSSLSocketFactoryImpl
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.getConnectionManager->org.apache.http.impl.client.DefaultHttpClient.createClientConnectionManager->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->javax.net.ssl.SSLContext.getDefault->javax.net.ssl.SSLContext.getInstance->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.conscrypt.DefaultSSLContextImpl.<init>->com.android.org.conscrypt.OpenSSLContextImpl.<init>->com.android.org.conscrypt.DefaultSSLContextImpl.getKeyManagers->java.lang.System.getProperty-><<java.lang.String>><<javax.net.ssl.keyStore>>->null
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.getConnectionManager->org.apache.http.impl.client.DefaultHttpClient.createClientConnectionManager->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->javax.net.ssl.SSLContext.getDefault->javax.net.ssl.SSLContext.getInstance->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.conscrypt.DefaultSSLContextImpl.<init>->com.android.org.conscrypt.OpenSSLContextImpl.<init>->com.android.org.conscrypt.DefaultSSLContextImpl.getTrustManagers->java.lang.System.getProperty-><<java.lang.String>><<javax.net.ssl.trustStore>>->null
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.getConnectionManager->org.apache.http.impl.client.DefaultHttpClient.createClientConnectionManager->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->javax.net.ssl.SSLContext.getDefault->javax.net.ssl.SSLContext.getInstance->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.conscrypt.DefaultSSLContextImpl.<init>->com.android.org.conscrypt.OpenSSLContextImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.getDefaultX509KeyManager->com.android.org.conscrypt.SSLParametersImpl.createDefaultX509KeyManager->javax.net.ssl.KeyManagerFactory.init->com.android.org.conscrypt.KeyManagerFactoryImpl.engineInit->java.security.KeyStore.getInstance->java.security.Security.getImpl->java.security.Security.getSpiClass->java.lang.Class.forName->java.lang.Class.forName-><<java.lang.String>><<java.security.KeyStoreSpi>><<boolean>><<true>><<java.lang.ClassLoader>><<null>>->class java.security.KeyStoreSpi
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.getConnectionManager->org.apache.http.impl.client.DefaultHttpClient.createClientConnectionManager->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->javax.net.ssl.SSLContext.getDefault->javax.net.ssl.SSLContext.getInstance->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.conscrypt.DefaultSSLContextImpl.<init>->com.android.org.conscrypt.OpenSSLContextImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.getDefaultX509KeyManager->com.android.org.conscrypt.SSLParametersImpl.createDefaultX509KeyManager->javax.net.ssl.KeyManagerFactory.init->com.android.org.conscrypt.KeyManagerFactoryImpl.engineInit->java.security.KeyStore.getInstance->java.security.Security.getImpl->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$Std.<init>->com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi.<init>->java.security.SecureRandom.<init>->java.util.Random.<init>->java.security.SecureRandom.setSeed-><<long>><<0>>->undefined
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.getConnectionManager->org.apache.http.impl.client.DefaultHttpClient.createClientConnectionManager->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->javax.net.ssl.SSLContext.getDefault->javax.net.ssl.SSLContext.getInstance->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.conscrypt.DefaultSSLContextImpl.<init>->com.android.org.conscrypt.OpenSSLContextImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.getDefaultX509KeyManager->com.android.org.conscrypt.SSLParametersImpl.createDefaultX509KeyManager->javax.net.ssl.KeyManagerFactory.init->com.android.org.conscrypt.KeyManagerFactoryImpl.engineInit->java.security.KeyStore.getInstance->java.security.Security.getImpl->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$Std.<init>->com.android.org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi.<init>->java.security.SecureRandom.<init>->java.security.SecureRandom.getDefaultPRNG->java.security.SecureRandom.getInstance->java.security.SecureRandom.<init>->java.util.Random.<init>->java.security.SecureRandom.setSeed-><<long>><<0>>->undefined
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.getConnectionManager->org.apache.http.impl.client.DefaultHttpClient.createClientConnectionManager->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->javax.net.ssl.SSLContext.getDefault->javax.net.ssl.SSLContext.getInstance->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.conscrypt.DefaultSSLContextImpl.<init>->com.android.org.conscrypt.OpenSSLContextImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.getDefaultX509KeyManager->com.android.org.conscrypt.SSLParametersImpl.createDefaultX509KeyManager->javax.net.ssl.KeyManagerFactory.init->com.android.org.conscrypt.KeyManagerFactoryImpl.engineInit->java.lang.System.getProperty-><<java.lang.String>><<javax.net.ssl.keyStore>>->null
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.getConnectionManager->org.apache.http.impl.client.DefaultHttpClient.createClientConnectionManager->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->javax.net.ssl.SSLContext.getDefault->javax.net.ssl.SSLContext.getInstance->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.conscrypt.DefaultSSLContextImpl.<init>->com.android.org.conscrypt.OpenSSLContextImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.getDefaultX509TrustManager->com.android.org.conscrypt.SSLParametersImpl.createDefaultX509TrustManager->javax.net.ssl.TrustManagerFactory.getTrustManagers->android.security.net.config.RootTrustManagerFactorySpi.engineGetTrustManagers->android.security.net.config.ApplicationConfig.getTrustManager->android.security.net.config.ApplicationConfig.ensureInitialized->android.security.net.config.ManifestConfigSource.getPerDomainConfigs->android.security.net.config.ManifestConfigSource.getConfigSource->android.security.net.config.ManifestConfigSource$DefaultConfigSource.<init>->android.security.net.config.NetworkSecurityConfig.getDefaultBuilder->android.security.net.config.UserCertificateSource.getInstance->android.security.net.config.UserCertificateSource$NoPreloadHolder.<clinit>->android.security.net.config.UserCertificateSource.<init>->android.security.net.config.UserCertificateSource.<init>->android.os.Environment.getUserConfigDirectory->java.io.File.<init>->java.io.File.toString->java.io.File.getPath->->/data
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.getConnectionManager->org.apache.http.impl.client.DefaultHttpClient.createClientConnectionManager->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->javax.net.ssl.SSLContext.getDefault->javax.net.ssl.SSLContext.getInstance->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.conscrypt.DefaultSSLContextImpl.<init>->com.android.org.conscrypt.OpenSSLContextImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.getDefaultX509TrustManager->com.android.org.conscrypt.SSLParametersImpl.createDefaultX509TrustManager->javax.net.ssl.TrustManagerFactory.getTrustManagers->android.security.net.config.RootTrustManagerFactorySpi.engineGetTrustManagers->android.security.net.config.ApplicationConfig.getTrustManager->android.security.net.config.ApplicationConfig.ensureInitialized->android.security.net.config.ManifestConfigSource.getPerDomainConfigs->android.security.net.config.ManifestConfigSource.getConfigSource->android.security.net.config.ManifestConfigSource$DefaultConfigSource.<init>->android.security.net.config.NetworkSecurityConfig.getDefaultBuilder->android.security.net.config.UserCertificateSource.getInstance->android.security.net.config.UserCertificateSource$NoPreloadHolder.<clinit>->android.security.net.config.UserCertificateSource.<init>->android.security.net.config.UserCertificateSource.<init>->android.os.Environment.getUserConfigDirectory->java.io.File.<init>->java.io.File.toString->java.io.File.getPath->->/datajava.io.File.$init-><<java.io.File>><</data>><<java.lang.String>><<misc>>->/data
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.getConnectionManager->org.apache.http.impl.client.DefaultHttpClient.createClientConnectionManager->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->javax.net.ssl.SSLContext.getDefault->javax.net.ssl.SSLContext.getInstance->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.conscrypt.DefaultSSLContextImpl.<init>->com.android.org.conscrypt.OpenSSLContextImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.getDefaultX509TrustManager->com.android.org.conscrypt.SSLParametersImpl.createDefaultX509TrustManager->javax.net.ssl.TrustManagerFactory.getTrustManagers->android.security.net.config.RootTrustManagerFactorySpi.engineGetTrustManagers->android.security.net.config.ApplicationConfig.getTrustManager->android.security.net.config.ApplicationConfig.ensureInitialized->android.security.net.config.ManifestConfigSource.getPerDomainConfigs->android.security.net.config.ManifestConfigSource.getConfigSource->android.security.net.config.ManifestConfigSource$DefaultConfigSource.<init>->android.security.net.config.NetworkSecurityConfig.getDefaultBuilder->android.security.net.config.UserCertificateSource.getInstance->android.security.net.config.UserCertificateSource$NoPreloadHolder.<clinit>->android.security.net.config.UserCertificateSource.<init>->android.security.net.config.UserCertificateSource.<init>->android.os.Environment.getUserConfigDirectory->java.io.File.<init>->java.io.File.toString->java.io.File.getPath->->/data/misc
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.getConnectionManager->org.apache.http.impl.client.DefaultHttpClient.createClientConnectionManager->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->javax.net.ssl.SSLContext.getDefault->javax.net.ssl.SSLContext.getInstance->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.conscrypt.DefaultSSLContextImpl.<init>->com.android.org.conscrypt.OpenSSLContextImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.getDefaultX509TrustManager->com.android.org.conscrypt.SSLParametersImpl.createDefaultX509TrustManager->javax.net.ssl.TrustManagerFactory.getTrustManagers->android.security.net.config.RootTrustManagerFactorySpi.engineGetTrustManagers->android.security.net.config.ApplicationConfig.getTrustManager->android.security.net.config.ApplicationConfig.ensureInitialized->android.security.net.config.ManifestConfigSource.getPerDomainConfigs->android.security.net.config.ManifestConfigSource.getConfigSource->android.security.net.config.ManifestConfigSource$DefaultConfigSource.<init>->android.security.net.config.NetworkSecurityConfig.getDefaultBuilder->android.security.net.config.UserCertificateSource.getInstance->android.security.net.config.UserCertificateSource$NoPreloadHolder.<clinit>->android.security.net.config.UserCertificateSource.<init>->android.security.net.config.UserCertificateSource.<init>->android.os.Environment.getUserConfigDirectory->java.io.File.<init>->java.io.File.toString->java.io.File.getPath->->/data/miscjava.io.File.$init-><<java.io.File>><</data/misc>><<java.lang.String>><<user>>->/data/misc
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.getConnectionManager->org.apache.http.impl.client.DefaultHttpClient.createClientConnectionManager->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->javax.net.ssl.SSLContext.getDefault->javax.net.ssl.SSLContext.getInstance->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.conscrypt.DefaultSSLContextImpl.<init>->com.android.org.conscrypt.OpenSSLContextImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.getDefaultX509TrustManager->com.android.org.conscrypt.SSLParametersImpl.createDefaultX509TrustManager->javax.net.ssl.TrustManagerFactory.getTrustManagers->android.security.net.config.RootTrustManagerFactorySpi.engineGetTrustManagers->android.security.net.config.ApplicationConfig.getTrustManager->android.security.net.config.ApplicationConfig.ensureInitialized->android.security.net.config.ManifestConfigSource.getPerDomainConfigs->android.security.net.config.ManifestConfigSource.getConfigSource->android.security.net.config.ManifestConfigSource$DefaultConfigSource.<init>->android.security.net.config.NetworkSecurityConfig.getDefaultBuilder->android.security.net.config.UserCertificateSource.getInstance->android.security.net.config.UserCertificateSource$NoPreloadHolder.<clinit>->android.security.net.config.UserCertificateSource.<init>->android.security.net.config.UserCertificateSource.<init>->android.os.Environment.getUserConfigDirectory->java.io.File.<init>->java.io.File.toString->java.io.File.getPath->->/data/misc/user
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.getConnectionManager->org.apache.http.impl.client.DefaultHttpClient.createClientConnectionManager->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->javax.net.ssl.SSLContext.getDefault->javax.net.ssl.SSLContext.getInstance->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.conscrypt.DefaultSSLContextImpl.<init>->com.android.org.conscrypt.OpenSSLContextImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.getDefaultX509TrustManager->com.android.org.conscrypt.SSLParametersImpl.createDefaultX509TrustManager->javax.net.ssl.TrustManagerFactory.getTrustManagers->android.security.net.config.RootTrustManagerFactorySpi.engineGetTrustManagers->android.security.net.config.ApplicationConfig.getTrustManager->android.security.net.config.ApplicationConfig.ensureInitialized->android.security.net.config.ManifestConfigSource.getPerDomainConfigs->android.security.net.config.ManifestConfigSource.getConfigSource->android.security.net.config.ManifestConfigSource$DefaultConfigSource.<init>->android.security.net.config.NetworkSecurityConfig.getDefaultBuilder->android.security.net.config.UserCertificateSource.getInstance->android.security.net.config.UserCertificateSource$NoPreloadHolder.<clinit>->android.security.net.config.UserCertificateSource.<init>->android.security.net.config.UserCertificateSource.<init>->android.os.Environment.getUserConfigDirectory->java.io.File.<init>->java.io.File.toString->java.io.File.getPath->->/data/misc/userjava.io.File.$init-><<java.io.File>><</data/misc/user>><<java.lang.String>><<0>>->/data/misc/user
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.getConnectionManager->org.apache.http.impl.client.DefaultHttpClient.createClientConnectionManager->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->javax.net.ssl.SSLContext.getDefault->javax.net.ssl.SSLContext.getInstance->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.conscrypt.DefaultSSLContextImpl.<init>->com.android.org.conscrypt.OpenSSLContextImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.getDefaultX509TrustManager->com.android.org.conscrypt.SSLParametersImpl.createDefaultX509TrustManager->javax.net.ssl.TrustManagerFactory.getTrustManagers->android.security.net.config.RootTrustManagerFactorySpi.engineGetTrustManagers->android.security.net.config.ApplicationConfig.getTrustManager->android.security.net.config.ApplicationConfig.ensureInitialized->android.security.net.config.ManifestConfigSource.getPerDomainConfigs->android.security.net.config.ManifestConfigSource.getConfigSource->android.security.net.config.ManifestConfigSource$DefaultConfigSource.<init>->android.security.net.config.NetworkSecurityConfig.getDefaultBuilder->android.security.net.config.UserCertificateSource.getInstance->android.security.net.config.UserCertificateSource$NoPreloadHolder.<clinit>->android.security.net.config.UserCertificateSource.<init>->android.security.net.config.UserCertificateSource.<init>->java.io.File.<init>->java.io.File.toString->java.io.File.getPath->->/data/misc/user/0
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.getConnectionManager->org.apache.http.impl.client.DefaultHttpClient.createClientConnectionManager->org.apache.http.conn.ssl.SSLSocketFactory.getSocketFactory->org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder.<clinit>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->org.apache.http.conn.ssl.SSLSocketFactory.<init>->javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory->javax.net.ssl.SSLSocketFactory.getDefault->javax.net.ssl.SSLContext.getDefault->javax.net.ssl.SSLContext.getInstance->sun.security.jca.GetInstance.getInstance->sun.security.jca.GetInstance.getInstance->java.security.Provider$Service.newInstance->java.lang.reflect.Constructor.newInstance->java.lang.reflect.Constructor.newInstance0->com.android.org.conscrypt.DefaultSSLContextImpl.<init>->com.android.org.conscrypt.OpenSSLContextImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.<init>->com.android.org.conscrypt.SSLParametersImpl.getDefaultX509TrustManager->com.android.org.conscrypt.SSLParametersImpl.createDefaultX509TrustManager->javax.net.ssl.TrustManagerFactory.getTrustManagers->android.security.net.config.RootTrustManagerFactorySpi.engineGetTrustManagers->android.security.net.config.ApplicationConfig.getTrustManager->android.security.net.config.ApplicationConfig.ensureInitialized->android.security.net.config.ManifestConfigSource.getPerDomainConfigs->android.security.net.config.ManifestConfigSource.getConfigSource->android.security.net.config.ManifestConfigSource$DefaultConfigSource.<init>->android.security.net.config.NetworkSecurityConfig.getDefaultBuilder->android.security.net.config.UserCertificateSource.getInstance->android.security.net.config.UserCertificateSource$NoPreloadHolder.<clinit>->android.security.net.config.UserCertificateSource.<init>->android.security.net.config.UserCertificateSource.<init>->java.io.File.<init>->java.io.File.toString->java.io.File.getPath->->/data/misc/user/0java.io.File.$init-><<java.io.File>><</data/misc/user/0>><<java.lang.String>><<cacerts-added>>->/data/misc/user/0
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.DefaultRequestDirector.execute->org.apache.http.impl.client.DefaultRequestDirector.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineProxy->sun.net.spi.DefaultProxySelector.select->java.security.AccessController.doPrivileged->sun.net.spi.DefaultProxySelector$1.run->sun.net.spi.DefaultProxySelector$1.run->sun.net.NetProperties.<clinit>->java.security.AccessController.doPrivileged->sun.net.NetProperties$1.run->sun.net.NetProperties$1.run->sun.net.NetProperties.-wrap0->sun.net.NetProperties.loadDefaultProperties->java.io.File.$init-><<java.lang.String>><</system>><<java.lang.String>><<lib>>->undefined
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.DefaultRequestDirector.execute->org.apache.http.impl.client.DefaultRequestDirector.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineProxy->sun.net.spi.DefaultProxySelector.select->java.security.AccessController.doPrivileged->sun.net.spi.DefaultProxySelector$1.run->sun.net.spi.DefaultProxySelector$1.run->sun.net.NetProperties.<clinit>->java.security.AccessController.doPrivileged->sun.net.NetProperties$1.run->sun.net.NetProperties$1.run->sun.net.NetProperties.-wrap0->sun.net.NetProperties.loadDefaultProperties->java.io.File.<init>->java.io.File.toString->java.io.File.getPath->->/system/lib
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.DefaultRequestDirector.execute->org.apache.http.impl.client.DefaultRequestDirector.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineProxy->sun.net.spi.DefaultProxySelector.select->java.security.AccessController.doPrivileged->sun.net.spi.DefaultProxySelector$1.run->sun.net.spi.DefaultProxySelector$1.run->sun.net.NetProperties.<clinit>->java.security.AccessController.doPrivileged->sun.net.NetProperties$1.run->sun.net.NetProperties$1.run->sun.net.NetProperties.-wrap0->sun.net.NetProperties.loadDefaultProperties->java.io.File.<init>->java.io.File.toString->java.io.File.getPath->->/system/libjava.io.File.$init-><<java.io.File>><</system/lib>><<java.lang.String>><<net.properties>>->/system/lib
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.DefaultRequestDirector.execute->org.apache.http.impl.client.DefaultRequestDirector.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineProxy->sun.net.spi.DefaultProxySelector.select->java.security.AccessController.doPrivileged->sun.net.spi.DefaultProxySelector$1.run->sun.net.spi.DefaultProxySelector$1.run->sun.net.NetProperties.<clinit>->java.security.AccessController.doPrivileged->sun.net.NetProperties$1.run->sun.net.NetProperties$1.run->sun.net.NetProperties.-wrap0->sun.net.NetProperties.loadDefaultProperties->java.io.File.getCanonicalPath->java.io.UnixFileSystem.resolve->java.io.File.getPath->->/system/lib/net.properties
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.DefaultRequestDirector.execute->org.apache.http.impl.client.DefaultRequestDirector.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineProxy->sun.net.spi.DefaultProxySelector.select->java.security.AccessController.doPrivileged->sun.net.spi.DefaultProxySelector$1.run->sun.net.spi.DefaultProxySelector$1.run->sun.net.NetProperties.<clinit>->java.security.AccessController.doPrivileged->sun.net.NetProperties$1.run->sun.net.NetProperties$1.run->sun.net.NetProperties.-wrap0->sun.net.NetProperties.loadDefaultProperties->java.io.FileInputStream.<init>->java.io.File.$init-><<java.lang.String>><</system/lib/net.properties>>->undefined
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.DefaultRequestDirector.execute->org.apache.http.impl.client.DefaultRequestDirector.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineProxy->sun.net.spi.DefaultProxySelector.select->java.security.AccessController.doPrivileged->sun.net.spi.DefaultProxySelector$1.run->sun.net.spi.DefaultProxySelector$1.run->sun.net.NetProperties.<clinit>->java.security.AccessController.doPrivileged->sun.net.NetProperties$1.run->sun.net.NetProperties$1.run->sun.net.NetProperties.-wrap0->sun.net.NetProperties.loadDefaultProperties->java.io.FileInputStream.<init>->java.io.FileInputStream.<init>->java.io.File.getPath->->/system/lib/net.properties
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.DefaultRequestDirector.execute->org.apache.http.impl.client.DefaultRequestDirector.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineProxy->sun.net.spi.DefaultProxySelector.select->java.security.AccessController.doPrivileged->sun.net.spi.DefaultProxySelector$1.run->sun.net.spi.DefaultProxySelector$1.run->sun.net.NetProperties.get->java.lang.System.getProperty-><<java.lang.String>><<https.proxyHost>><<java.lang.String>><<null>>->null
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.DefaultRequestDirector.execute->org.apache.http.impl.client.DefaultRequestDirector.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineProxy->sun.net.spi.DefaultProxySelector.select->java.security.AccessController.doPrivileged->sun.net.spi.DefaultProxySelector$1.run->sun.net.spi.DefaultProxySelector$1.run->sun.net.NetProperties.get->java.lang.System.getProperty-><<java.lang.String>><<proxyHost>><<java.lang.String>><<null>>->null
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.AbstractHttpClient.execute->org.apache.http.impl.client.DefaultRequestDirector.execute->org.apache.http.impl.client.DefaultRequestDirector.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineRoute->org.apache.http.impl.conn.ProxySelectorRoutePlanner.determineProxy->sun.net.spi.DefaultProxySelector.select->java.security.AccessController.doPrivileged->sun.net.spi.DefaultProxySelector$1.run->sun.net.spi.DefaultProxySelector$1.run->sun.net.NetProperties.get->java.lang.System.getProperty-><<java.lang.String>><<socksProxyHost>><<java.lang.String>><<null>>->null
java.util.concurrent.ThreadPoolExecutor.runWorker->java.util.concurrent.FutureTask.run->android.os.AsyncTask$2.call->com.bugsense.trace.BugSense$2.doInBackground->android.util.Log.e->android.util.Log.printlns->com.android.internal.util.LineBreakBufferedWriter.<init>->com.android.internal.util.LineBreakBufferedWriter.<init>->java.lang.System.getProperty-><<java.lang.String>><<line.separator>>->

